{"version":3,"sources":["App.styles.ts","utils/api.ts","utils/descriptionSnippet.ts","utils/theme.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","getProducts","a","fetch","json","descriptionSnippet","description","length","slice","theme","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","useStyles","makeStyles","root","maxWidth","height","down","between","media","itemTitle","fontSize","itemDescription","itemPrice","paddingTop","textAlign","color","cartButton","width","borderBottomLeftRadius","borderBottomRightRadius","paddingBottom","cardActions","padding","cardContent","Item","item","handleAddToCart","classes","Card","className","Box","display","flexDirection","justifyContent","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","price","CardActions","Button","onClick","size","CartItem","handleRemoveFromCart","amount","toFixed","disableElevation","id","src","alt","widthsObj","aside","props","total","Cart","items","cartItems","matchesMedium","useMediaQuery","json2mq","minWidth","matchesSmall","wrapperSize","map","reduce","ac","margin","button","drawer","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","notifyOnChangeProps","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","data","isLoading","error","clickedItem","prev","find","LinearProgress","AppBar","position","alignItems","Badge","badgeContent","AddShoppingCart","Drawer","anchor","open","onClose","Grid","container","spacing","justify","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b1c53eca.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n`;","import { CartItemType } from \"./types\";\n\nexport const getProducts = async (): Promise<CartItemType[]> => \n    await (await fetch('https://fakestoreapi.com/products')).json();\n","export const descriptionSnippet = (description: string): string => description.length > 60 ? `${description.slice(0, 60)}...` : description;","import { createMuiTheme } from '@material-ui/core';\n\nexport const theme = createMuiTheme({\n    breakpoints: {\n      values: {\n        xs: 0,\n        sm: 600,\n        md: 960,\n        lg: 1280,\n        xl: 1920,\n        },\n    },\n});","import { Box, Button, Card, CardActionArea, CardActions, CardContent, CardMedia, makeStyles, Typography } from \"@material-ui/core\";\n\nimport { descriptionSnippet } from \"../utils/descriptionSnippet\";\nimport { theme } from \"../utils/theme\";\n// Types\nimport { CartItemType } from \"../utils/types\";\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        height: 375,\n        [theme.breakpoints.down('sm')]: {\n            height: 325\n        },\n        [theme.breakpoints.between('md', 'lg')]: {\n            height: 350\n        }\n    },\n    media: {\n        height: 140,\n        [theme.breakpoints.down('sm')]: {\n            height: 110\n        },\n        [theme.breakpoints.between('md', 'lg')]: {\n            height: 125\n        }\n    },\n    itemTitle: {\n        fontSize: '1.2rem',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '1rem',\n        }\n    },\n    itemDescription: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.8rem',\n        }\n    },\n    itemPrice: {\n        paddingTop: \"10px\",\n        textAlign: \"center\",\n        color: \"green\",\n        fontSize: \"1.1rem\"\n    },\n    cartButton: {\n        width: \"100%\",\n        borderBottomLeftRadius: '10px',\n        borderBottomRightRadius: '10px',\n        paddingTop: '0.5rem',\n        paddingBottom: '0.5rem',\n    },\n    cardActions: {\n        padding: 0\n    },\n    cardContent: {\n        [theme.breakpoints.down('sm')]: {\n            paddingBottom: \"0px\"\n        }\n    }\n})\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => {\n    const classes = useStyles();\n\n  return (\n    <Card className={classes.root} >\n        <Box height=\"100%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\"  >\n            <CardActionArea>\n                <CardMedia\n                className={classes.media}\n                image={item.image}\n                title=\"Contemplative Reptile\"\n                />\n                <CardContent className={classes.cardContent} >\n                    <Typography className={classes.itemTitle} gutterBottom variant=\"h5\" component=\"h2\">\n                        {descriptionSnippet(item.title)}\n                    </Typography>\n                    <Typography className={classes.itemDescription} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {descriptionSnippet(item.description)}\n                    </Typography>\n                    <Typography className={classes.itemPrice} variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n                        ${item.price}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions className={classes.cardActions} >\n                <Button className={classes.cartButton} onClick={() => handleAddToCart(item)} size=\"small\" color=\"primary\">\n                Add to cart\n                </Button>\n            </CardActions>\n        </Box>\n    </Card>\n  );\n};\n\nexport default Item;","import styled from \"styled-components\";\n\n// rerun\nexport const Wrapper = styled.div`\n    display: flex;\n    // flex-direction: column;\n    justify-content: space-between;\n    font-family: Arial, Helvetica, sans-serif;\n    border-bottom: 1px solid lightblue;\n    padding-bottom: 20px;\n\n    div {\n        flex: 1;\n    }\n    \n    .item-title {\n        font-size: 1rem;\n    }\n\n    .information, .buttons {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .buttons {\n        align-items: center;\n        & > p {\n            margin: 0;    \n        }\n    }\n    \n    .buttons > button {\n        height: 2rem;\n    }\n\n    img {\n        max-width: 80px;\n        object-fit: cover;\n        margin-left: 40px;\n    }\n\n    @media screen and (max-width: 768px) {\n        .item-title {\n            margin: 0.5rem 0;\n        }\n        .information {\n            font-size: 0.8rem;\n        }\n        .buttons > button {\n            height: 1.7rem;\n        }\n    }\n    @media screen and (max-width: 425px) {\n        .item-title {\n            font-size: 0.7rem;\n        }\n        .information {\n            font-size: 0.65rem;\n        }\n        .buttons {\n            flex-direction: column;\n        }\n        img {\n            margin-left: 15px;\n        }\n    }\n`;","import { Button } from \"@material-ui/core\";\nimport { CartItemType } from \"../utils/types\";\nimport { Wrapper } from \"./CartItem.styles\";\n\ntype Props = {\n    item: CartItemType;\n    handleAddToCart: (clickedItem: CartItemType) => void;\n    handleRemoveFromCart: (id: number) => void;\n}\n\nconst CartItem: React.FC<Props> = ({ item, handleAddToCart, handleRemoveFromCart }) => {\n\n    return (\n        <Wrapper>\n            <div className=\"\">\n                <h3 className=\"item-title\"> {item.title} </h3>\n                <div className=\"information\">\n                    <p> Price: ${item.price} </p>\n                    <p> Total: ${(item.amount * item.price).toFixed(2)} </p>\n                </div>\n                <div className=\"buttons\">\n                    <Button\n                        size=\"small\"\n                        disableElevation\n                        variant=\"contained\"\n                        onClick={() => handleRemoveFromCart(item.id)}\n                    > - </Button>\n                    <p>{item.amount}</p>\n                    <Button\n                        size=\"small\"\n                        disableElevation\n                        variant=\"contained\"\n                        onClick={() => handleAddToCart(item)}\n                    > + </Button>\n                </div>\n            </div>\n            <img src={item.image} alt={item.title} />\n      </Wrapper>\n    );\n}\n    // <Wrapper>\n    //     <div className=\"\">\n    //         <h3 className=\"item-title\"> {item.title} </h3>\n    //         <div className=\"information\">\n    //             <p> Price: ${item.price} </p>\n    //             <p> Total: ${(item.amount * item.price).toFixed(2)} </p>\n    //         </div>\n    //         <div className=\"buttons\">\n    //             <Button\n    //                 size=\"small\"\n    //                 disableElevation\n    //                 variant=\"contained\"\n    //                 onClick={() => handleRemoveFromCart(item.id)}\n    //             > - </Button>\n    //             <p>{item.amount}</p>\n    //             <Button\n    //                 size=\"small\"\n    //                 disableElevation\n    //                 variant=\"contained\"\n    //                 onClick={() => handleAddToCart(item)}\n    //             > + </Button>\n    //         </div>\n    //     </div>\n    //     <img src={item.image} alt={item.title} />\n    // </Wrapper>\n\nexport default CartItem;\n\n\n","import styled from \"styled-components\";\nimport { WrapperPropsType } from \"../utils/types\";\n\nconst widthsObj = {\n    \"small\": \"210px\",\n    \"medium\": \"310px\",\n    \"big\": \"400px\"\n};\n\nexport const Wrapper = styled.aside`\n    font-family: Arial, Helvetica, sans-serif;\n    width:  ${(props: WrapperPropsType) => widthsObj[props.size]};\n    padding: 20px;\n`;","import CartItem from \"../CartItem/CartItem\";\nimport { CartItemType, WrapperPropsType } from \"../utils/types\";\nimport { Wrapper } from \"./Cart.styles\";\nimport json2mq from 'json2mq';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { makeStyles } from \"@material-ui/core\";\n\ntype Props = {\n    cartItems: CartItemType[]\n    handleAddToCart: (clickedItem: CartItemType) => void;\n    handleRemoveFromCart: (id: number) => void;\n}\n\nconst useStyles = makeStyles({\n    title: {\n        fontSize: \"1.2rem\"\n    },\n    total: {\n        fontSize: \"1.1rem\"\n    }\n})\n\nconst Cart: React.FC<Props> = ({ cartItems, handleAddToCart, handleRemoveFromCart }) => {\n    const classes = useStyles();\n    const calculateTotal = (items: CartItemType[]) => \n        items.reduce((ac: number, item) => ac + item.amount * item.price, 0);\n\n    // const matchesMedium = useMediaQuery(\n\n    const matchesMedium = useMediaQuery(\n        json2mq({\n            minWidth: 425,\n            maxWidth: 768,\n        }),\n    );\n\n    const matchesSmall = useMediaQuery(\n        json2mq({\n            maxWidth: 425,\n        }),\n    );\n\n    let wrapperSize: WrapperPropsType = \"big\" as any;\n    if(matchesMedium) wrapperSize = \"medium\" as any;\n    else if(matchesSmall) wrapperSize = \"small\" as any;\n\n    return (\n        <Wrapper size={wrapperSize as any} >\n            <h2 className={classes.title} > Your Shopping Cart </h2>\n            { cartItems.length === 0 && <p>No items in cart</p> }\n            \n            { cartItems.map(item => (\n                <CartItem \n                    key={item.id}\n                    item={item}\n                    handleAddToCart={handleAddToCart}\n                    handleRemoveFromCart={handleRemoveFromCart}\n                />\n            )) }\n            <h2 className={classes.total} > Total: ${calculateTotal(cartItems).toFixed(2)} </h2>\n        </Wrapper>\n    )\n}\n\nexport default Cart;","import { useState } from \"react\"\nimport { useQuery } from \"react-query\"\n\nimport { LinearProgress,\n  Grid,\n  Drawer,\n  Badge, \n  AppBar,\n  Typography,\n  Box,\n  Button\n} from '@material-ui/core';\nimport { AddShoppingCart } from \"@material-ui/icons\";\nimport { Wrapper } from \"./App.styles\";\nimport { CartItemType } from \"./utils/types\";\nimport { getProducts } from \"./utils/api\";\nimport Item from \"./Item/Item\";\nimport Cart from \"./Cart/Cart\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { theme } from \"./utils/theme\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 0\n  },\n  button: {\n    color: \"white\"\n  },\n  drawer: {\n    width: \"460px\",\n    [theme.breakpoints.down('sm')]: {\n        width: \"300px\"\n    }\n  }\n})\n\nconst App = () => {\n  const classes = useStyles();\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n  const { data, isLoading, error } = useQuery(\n    'products',\n    getProducts,\n    { \n      notifyOnChangeProps: ['data'],\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false\n    }\n  );\n\n  const getTotalItems = (items: CartItemType[]) => \n    items.reduce((ac: number, item) => ac + item.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // is the item already added in the cart\n      const isItemInCart = prev.find((item) => item.id === clickedItem.id);\n      \n      if(isItemInCart) {\n        return prev.map(item => (\n          item.id === clickedItem.id \n            ? { ...item, amount: item.amount + 1 } \n            : item\n        ))\n      };\n\n      // first time the item is added\n      return [...prev, { ...clickedItem, amount: 1 }];\n    });\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems((prev) => \n      prev.reduce((ac, item) => {\n          if (item.id === id) {\n            if (item.amount === 1)\n              return ac;\n            return [...ac, { ...item, amount: item.amount - 1 }];\n          } else {\n            return [...ac, item];\n          }\n        }, [] as CartItemType[])\n    );\n  };\n\n  if(isLoading) return <LinearProgress />\n  if(error) return <div className=\"\">Something were wrong</div>\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n      <Box padding={2} display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" >\n          <Typography variant=\"h6\" className={\"\"}>\n            react-typescript-cart\n          </Typography>\n          <Button className={classes.button} onClick={() => setCartOpen(true)}>\n            <Badge badgeContent={getTotalItems(cartItems)} color=\"error\">\n                <AddShoppingCart />\n            </Badge>\n          </Button>\n        </Box>\n      </AppBar>\n      <Wrapper>\n        <Drawer className={classes.drawer} anchor=\"right\" open={cartOpen} onClose={() => setCartOpen(false)}>\n          <Cart \n            cartItems={cartItems} \n            handleAddToCart={handleAddToCart}\n            handleRemoveFromCart={handleRemoveFromCart}\n            />\n        </Drawer>\n        <Grid container spacing={4} justify=\"center\" >\n          { data?.map((item) => (\n            <Grid item key={item.id} xs={12} sm={6} md={4} lg={3} xl={2} >\n              <Item item={item} handleAddToCart={handleAddToCart} />\n            </Grid>\n          ))}\n        </Grid>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\n// removed StrictMode because it throws error for MaterialUI dropdown\n// and it isnt fixed for now \nReactDOM.render(\n    <QueryClientProvider client={client}>\n        <App />\n    </QueryClientProvider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}